Assignment 3 readme File

------------------------------------------------------------------------
What is your name?

Yavuz Gonen

------------------------------------------------------------------------
What authorized sources of information did you use to complete the
assignment? COPY THE LIST of authorized sources of information given
in the "Policies" web page (also available on armlab in the file
~cos217/AuthorizedSourcesList ) to this section of the readme file,
and edit it as appropriate.

The course's lectures.
The course's precepts.
The course's website.
Documents that are referenced directly by the course's website. 
The course's textbooks.

------------------------------------------------------------------------
What unauthorized sources of information did you use to complete the
assignment? List any unauthorized sources of information that you used
to complete the assignment, and describe how you used them. The course
"Policies" web page defines unauthorized sources of information, and
any source that you have used but not listed in the authorized sources
should be included here. Please note that using an unauthorized source
may trigger a course penalty, and depending on the nature of the
interaction, may additionally require the interaction being reported
to the Committee on Discipline. Write "None" if you used no
unauthorized sources of information.

None

------------------------------------------------------------------------
What is your assessment of the assignment? Was it helpful? Was it fun?

Helpful and fun.

------------------------------------------------------------------------
(optional) What information can you provide about your submission that
will help your grader to grade it in the most favorable light? In
particular, what bugs are in your submission?



------------------------------------------------------------------------
What warnings does splint generate on symtablelist.c, and what are your
disagreements with them? Copy the splint warnings here, and express your
disagreement after each warning. If there are no warnings, then write
"None."

symtablelist.c:168:9: Statement has no effect: pfApply(tracer->...
Statement has no visible effect --- no values are modified. (Use -noeffect to
inhibit warning)

EXPLANATION: pfApply is a pointer to a function, so it doesn't have an
effect inside symtablelist.c; however, the function itself will be 
assigned a role inside the client code not inside symtablelist.c.

------------------------------------------------------------------------
What warnings does critTer generate on symtablelist.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

symtablelist.c: line 58: medium priority:
Do you want to validate 'pvValue' through an assert?

symtablelist.c: line 82: medium priority:
Do you want to validate 'pvValue' through an assert?

EXPLANATION: No need to assert pvValue because it is allowed to be NULL.

symtablelist.c: line 163: medium priority:
Do you want to validate 'pvExtra' through an assert?

EXPLANATION: No need to assert pvExtra because it is allowed to be NULL.

------------------------------------------------------------------------
What warnings does splint generate on symtablehash.c, and what are your
disagreements with them? Copy the splint warnings here, and express your
disagreement after each warning. If there are no warnings, then write
"None."

symtablehash.c: (in function SymTable_map)
symtablehash.c:259:13: Statement has no effect: pfApply((const c...
  Statement has no visible effect --- no values are modified. (Use -noeffect to
  inhibit warning)

EXPLANATION: pfApply is a pointer to a function, so it doesn't have an
effect inside symtablehash.c; however, the function itself will be 
assigned a role inside the client code not inside symtablehash.c.

------------------------------------------------------------------------
What warnings does critTer generate on symtablehash.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

symtablehash.c: line 130: medium priority:
Do you want to validate 'pvValue' through an assert?

symtablehash.c: line 158: medium priority:
Do you want to validate 'pvValue' through an assert?

EXPLANATION: No need to assert pvValue because it is allowed to be NULL.

symtablehash.c: line 251: medium priority:
Do you want to validate 'pvExtra' through an assert?

EXPLANATION: No need to assert pvExtra because it is allowed to be NULL.

------------------------------------------------------------------------
What are the CPU times reported by testsymtable.c with binding counts
50, 500, 5000, 50000, and 500000 using (1) your linked list
implementation, (2) your non-expanding hash table implementation, and
(3) your expanding hash table implementation? Fill in the blanks.

The linked list implementation with:
-- 50 bindings consumed 0.000000 seconds.
-- 500 bindings consumed 0.001588 seconds.
-- 5000 bindings consumed 1.223338 seconds.
-- 50000 bindings consumed 121.958485 seconds.
-- 500000 bindings consumed More than 5 minutes.

The non-expanding hash table implementation with:
-- 50 bindings consumed 0.000000 seconds.
-- 500 bindings consumed 0.000000 seconds.
-- 5000 bindings consumed 0.010005 seconds.
-- 50000 bindings consumed 0.365371 seconds.
-- 500000 bindings consumed 80.778060 seconds.

The expanding hash table implementation with:
-- 50 bindings consumed 0.000000 seconds.
-- 500 bindings consumed 0.000000 seconds.
-- 5000 bindings consumed 0.006092 seconds.
-- 50000 bindings consumed 0.126938 seconds.
-- 500000 bindings consumed 1.703095 seconds.
